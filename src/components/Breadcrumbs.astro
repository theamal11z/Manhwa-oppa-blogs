---
// Get the current pathname from Astro.url
const { pathname } = Astro.url;

// Split the pathname into segments, remove empty segments
const segments = pathname.split('/').filter(Boolean);

// Create breadcrumb items with proper paths
const breadcrumbs = [
  { label: 'Home', path: '/', active: segments.length === 0 }
];

let currentPath = '';
segments.forEach((segment, index) => {
  currentPath += `/${segment}`;

  // Skip adding 'blog' to breadcrumbs when on a blog post page (we'll use the actual title)
  if (segment === 'blog' && segments.length > index + 1) {
    breadcrumbs.push({ label: 'Blog', path: '/blog', active: false });
    return;
  }

  // Decode URI components and transform to Title Case for better display
  const label = decodeURIComponent(segment)
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');

  breadcrumbs.push({
    label,
    path: currentPath,
    active: index === segments.length - 1
  });
});

// If title is passed as a prop, use it for the last breadcrumb item
const { title } = Astro.props;
if (title && breadcrumbs.length > 1) {
  breadcrumbs[breadcrumbs.length - 1].label = title;
}
---

<nav aria-label="breadcrumbs" class="mb-6 mx-auto max-w-7xl px-4 py-2">
  <ol class="flex flex-wrap items-center text-sm text-gray-400 space-x-2">
    {breadcrumbs.map((breadcrumb, index) => (
      <li class="flex items-center">
        {index > 0 && <span class="mx-2">/</span>}
        {breadcrumb.active ? (
          <span class="text-white font-semibold" aria-current="page">{breadcrumb.label}</span>
        ) : (
          <a 
            href={breadcrumb.path} 
            class="hover:text-red-500 transition-colors"
          >
            {breadcrumb.label}
          </a>
        )}
      </li>
    ))}
  </ol>
</nav>

<!-- Structured data for breadcrumbs -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": breadcrumbs.map((breadcrumb, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": breadcrumb.label,
    "item": new URL(breadcrumb.path, Astro.url.origin).toString()
  }))
})}>
</script>
